#ifndef _TEST_APP
#define _TEST_APP
#include "ofMain.h"
#include "ofxONI.h"
#include "DataMote.h"
#include "ofxOpenCv.h"
#include "ColorSampler.h"
#include "TextSampler.h"
#define MAX_PLAYERS 5
#define MAX_FLIPCOUNT 10
{
public:
    testApp();
    void setup();
    void update();
    void draw();
    void keyPressed  (int key);
    void keyReleased(int key);
    void mouseMoved(int x, int y );
    void mouseDragged(int x, int y, int button);
    void mousePressed(int x, int y, int button);
    void mouseReleased(int x, int y, int button);
    void resized(int w, int h);
    ofxONI oni;
    int numOfPlayers;
    ofxCvGrayscaleImage players[MAX_PLAYERS];
    void initScene();
    void addRandomParticle();
    DataMote* makeDataMote(ofPoint pos, float  m, float d);
    void updateMoteLabel();
    void updateAttractRepelPoints();
    XnUInt16 numberUsers;
    int flipCount;
    void setUserAttract(bool _attractOn);
    ofTrueTypeFont myFont;
    DataMote* pRepelMote;
    DataMote* pAttractMote;
    bool doVideoWrite;
//    ofImage saveScreen;
//    ofxCvColorImage colorImg;
//    CvVideoWriter * writer;
   int snapCounter;
   ColorSampler *pInsidePalette;
   ColorSampler *pOutsidePalette;
   TextSampler *pTextSampler;
/*
*/
/*
*/
/*
*/
/*
*/
/*
*/
};
#endif
#ifdef _COMMENT_OUT
for(unsigned int i=0; i<physics.numberOfParticles(); i++) physics.makeAttraction(pAttractMote, physics.getParticle(i), ofRandom(MIN_ATTRACTION, MAX_ATTRACTION));
for(unsigned int i=0; i<physics.numberOfAttractions(); i++) physics.getAttraction(i)->turnOff();
oni.skeletonTracking();
physics.draw();
if (doVideoWrite) {
}
#endif
